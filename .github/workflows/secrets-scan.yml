name: Secrets Scanning

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 8 AM UTC (before main security scan)
    - cron: '0 8 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for secret scanning

      - name: TruffleHog Secret Scanning
        # For push events on main, scan the last commit only to avoid base==head error
        # For PRs and other events, TruffleHog will auto-detect the range
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            # Scan only the latest commit on push to main
            docker run --rm -v "$PWD:/workdir" -w /workdir \
              ghcr.io/trufflesecurity/trufflehog:latest \
              git file:///workdir --since-commit HEAD~1 --only-verified
          else
            # For PRs and scheduled runs, scan the full repo
            docker run --rm -v "$PWD:/workdir" -w /workdir \
              ghcr.io/trufflesecurity/trufflehog:latest \
              filesystem /workdir --only-verified
          fi

      - name: GitGuardian Secret Scanning
        if: always()
        uses: GitGuardian/ggshield-action@master
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_PULL_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        continue-on-error: true  # Don't fail if API key not set

      - name: Scan configuration files for secrets
        run: |
          echo "🔍 Scanning config files for potential secrets..."

          # Check for common secret patterns in YAML files (excluding known safe patterns)
          if grep -r -i "password\|secret\|token\|api[-_]key" config/ --include="*.yml" --include="*.yaml" | grep -v "secret_url_secret\|webhook_url_secret\|integration_key_secret\|block_on_secrets\|scan.*secret\|secret.*scan"; then
            echo "⚠️  Warning: Found potential secrets in config files"
            echo "Please review the matches above"
            exit 1
          else
            echo "✅ No obvious secrets found in config files"
          fi

      - name: Check for hardcoded secrets in Python
        run: |
          echo "🔍 Scanning Python files for hardcoded secrets..."

          # Look for common secret patterns
          if grep -r -E "(password|token|api[-_]key|secret)\\s*=\\s*['\"](?!.*\{\{|.*\$\{)[^'\"]{8,}" scripts/ --include="*.py"; then
            echo "⚠️  Warning: Found potential hardcoded secrets"
            echo "Please review the matches above"
            exit 1
          else
            echo "✅ No hardcoded secrets found in Python files"
          fi

      - name: Check for AWS credentials
        run: |
          echo "🔍 Checking for AWS credentials..."

          if grep -r -E "(AKIA|ASIA)[A-Z0-9]{16}" . --exclude-dir=.git; then
            echo "❌ Found potential AWS access key"
            exit 1
          else
            echo "✅ No AWS credentials found"
          fi

      - name: Check for private keys
        run: |
          echo "🔍 Checking for private keys..."

          if grep -r "BEGIN.*PRIVATE KEY" . --exclude-dir=.git --include="*.py" --include="*.yml" --include="*.yaml" --include="*.json"; then
            echo "❌ Found potential private key"
            exit 1
          else
            echo "✅ No private keys found"
          fi

      - name: Summary
        if: always()
        run: |
          echo "## 🔐 Secrets Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TruffleHog scan completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Configuration files scanned" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Python files scanned" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ AWS credentials check completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Private key check completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: All checks passed ✅" >> $GITHUB_STEP_SUMMARY
